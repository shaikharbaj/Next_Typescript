1.Created two types of user such as Customer & supplier
2.Create Seperate dashboard for both supplier and Customer
3.Create Supplier Login and Register functionality.
4.



<div className="mb-2 varient">
              {variants.map((variant, index) => (
                <div className="mb-2 varient" key={index}>
                  <div className="row gutters">
                    {activeAttributes?.map((attribute: any) => (
                      <div className="col-xl-4 col-lg-4 col-md-4 col-sm-6 col-12" key={attribute.id}>
                        <div className="form-group">
                          <label>{attribute.name}</label>
                          <select
                            value={attributeVariants[index][attribute.id]}
                            className="form-control"
                            onChange={(e) => handleAttributeChange(index, attribute.id, e.target.value)}
                          >
                            <option value="">Select {attribute.name}</option>
                            {attribute?.attributevalues?.map((value: any, valueIndex: number) => (
                              <option key={valueIndex} value={value.id}>
                                {value.name}
                              </option>
                            ))}
                          </select>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>












<div className="grid grid-cols-2 md:grid-cols-3 gap-4">
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-1.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-2.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-3.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-4.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-5.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-6.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-7.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-8.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-9.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-10.jpg"
                alt=""
              />
            </div>
            <div>
              <img
                className="h-auto max-w-full rounded-lg"
                src="https://flowbite.s3.amazonaws.com/docs/gallery/square/image-11.jpg"
                alt=""
              />
            </div>
          </div>




{/* <div className="mb-2">
              <label htmlFor="" className="mb-1">
                Select Attribute
              </label>
              <select
                value={attributeId}
                name="attribute"
                className="input"
                onChange={(e) => setAttributeId(e.target.value)}
              >
                <option value="">select attribute</option>
                {activeAttributes?.length > 0 &&
                  activeAttributes.map((s: any) => {
                    return (
                      <option value={s.id} key={s.id}>
                        {s.name}
                      </option>
                    );
                  })}
              </select>
              {errors?.subcategory_id && (
                <p className="error">{errors?.subcategory_id}</p>
              )}
            </div>
            <div className="mb-2">
              <label htmlFor="" className="mb-1">
                Select Attribute value
              </label>
              <select
                value={attributevalue_id}
                name="attributevalue"
                className="input"
                onChange={(e) => setAttributeValueId(e.target.value)}
              >
                <option value="">select attribute value</option>
                {activeAttributeValue?.length > 0 &&
                  activeAttributeValue.map((s: any) => {
                    return (
                      <option value={s.id} key={s.id}>
                        {s.name}
                      </option>
                    );
                  })}
              </select>
              {errors?.subcategory_id && (
                <p className="error">{errors?.subcategory_id}</p>
              )}
            </div>
            <div className="mb-2">
              <div className="row">
                <div className="col-12 col-sm-8">
                  <label htmlFor="" className="mb-1">
                    Select Attribute unit
                  </label>
                  <select
                    value={attributeunit_id}
                    name="attribute_unit"
                    className="input"
                    onChange={(e) => setAttributeUnitID(e.target.value)}
                  >
                    <option value="">select attribute unit</option>
                    {activeAttributeUnit?.length > 0 &&
                      activeAttributeUnit?.map((s: any) => {
                        return (
                          <option value={s.id} key={s.id}>
                            {s.name}
                          </option>
                        );
                      })}
                  </select>
                  {errors?.subcategory_id && (
                    <p className="error">{errors?.subcategory_id}</p>
                  )}
                </div>
                <div className="col-12 col-sm-4 d-flex align-items-end create_unit_btn">
                  <button
                    className="input"
                    type="button"
                    onClick={() => setIsAddAttributeUnit(!isaddAttributeUnit)}
                  >
                    ADD UNIT +{" "}
                  </button>
                </div>
              </div>
            </div>
            {isaddAttributeUnit && (
              <div className="mb-2 add_unit_container">
                <label htmlFor="" className="mb-1">
                  Add Unit
                </label>
                <input
                  type="text"
                  value={unit_name}
                  onChange={(e) => setUnitName(e.target.value)}
                  className="input"
                />
                {errors?.unit_name && (
                  <p className="error">{errors?.unit_name}</p>
                )}
                <button
                  className=" mt-2 add_btn"
                  type="button"
                  onClick={addunitHandler}
                >
                  ADD
                </button>
              </div>
            )} */}



<div className="row gutters" key={variantIndex}>
                  {variant?.map((attribute: any, attributeIndex: number) => (
                    <div
                      key={attributeIndex}
                      className="col-xl-4 col-lg-4 col-md-4 col-sm-6 col-12"
                    >
                      <div className="form-group">
                        <label>{activeAttributes[attributeIndex]?.name}</label>
                        <select
                          className="form-control"
                          value={attribute.attributeValueId}
                          onChange={(e) =>
                            handleAttributeChange(
                              variantIndex,
                              attributeIndex,
                              e.target.value
                            )
                          }
                        >
                          <option value="">
                            Select {activeAttributes[attributeIndex].name}
                          </option>
                          {/* Render attribute values dynamically */}
                          {activeAttributes[attributeIndex].attributevalues.map(
                            (value: any) => (
                              <option key={value.id} value={value.id}>
                                {value.name}
                              </option>
                            )
                          )}
                        </select>
                      </div>
                    </div>
                  ))}
                </div>




//supplier product details page ......................................


 <div className="overflow-x-hidden lg:overflow-hidden">
        {/* <!-- Contents --> */}
        <div className="container mx-auto font-kumbh text-base">
          {/* <!-- Main Content --> */}
          <main className="w-full flex flex-col lg:flex-row">
            {/* <!-- Gallery --> */}
            <section className="h-fit flex-col gap-8 mt-6 sm:flex sm:flex-row sm:gap-4 sm:h-full sm:mt-24 sm:mx-2 md:gap-8 md:mx-4 lg:flex-col lg:mx-0 lg:mt-36">
              <picture className="relative flex items-center bg-orange sm:bg-transparent">
                <button
                  className="bg-white w-10 h-10 flex items-center justify-center pr-1 rounded-full absolute left-6 z-10 sm:hidden"
                  id="previous-mobile"
                >
                  <svg
                    width="12"
                    height="18"
                    xmlns="http://www.w3.org/2000/svg"
                    id="previous-mobile"
                  >
                    <path
                      d="M11 1 3 9l8 8"
                      stroke="#1D2026"
                      strokeWidth="3"
                      fill="none"
                      fillRule="evenodd"
                      id="previous-mobile"
                    />
                  </svg>
                </button>
                <img
                  src={product?.productImages?.[selected_image]?.url}
                  alt="product"
                  className="block sm:rounded-xl xl:w-[70%] xl:rounded-xl m-auto pointer-events-none transition duration-300 lg:w-3/4 lg:pointer-events-auto lg:cursor-pointer lg:hover:shadow-xl"
                  id="hero"
                />
                <button
                  className="bg-white w-10 h-10 flex items-center justify-center pl-1 rounded-full absolute right-6 z-10 sm:hidden"
                  id="next-mobile"
                >
                  <svg
                    width="13"
                    height="18"
                    xmlns="http://www.w3.org/2000/svg"
                    id="next-mobile"
                  >
                    <path
                      d="m2 1 8 8-8 8"
                      stroke="#1D2026"
                      strokeWidth="3"
                      fill="none"
                      fillRule="evenodd"
                      id="next-mobile"
                    />
                  </svg>
                </button>
              </picture>

              <div className="thumbnails hidden justify-between gap-4 m-auto sm:flex sm:flex-col sm:justify-start sm:items-center sm:h-fit md:gap-5 lg:flex-row">
                {product?.productImages?.map((i: any, index: number) => {
                  return (
                    <div className="w-1/5 cursor-pointer rounded-xl sm:w-28 md:w-32 lg:w-[72px] xl:w-[78px] ring-active">
                      <img
                        src={i?.url}
                        alt="thumbnail"
                        className={`rounded-xl hover:opacity-50 transition active ${
                          selected_image == index ? "primary_image" : ""
                        }`}
                        onClick={() => setSelectedImage(index)}
                      />
                    </div>
                  );
                })}
              </div>
            </section>

            {/* <!-- Text --> */}
            <section className="w-full p-6 mt-5 lg:mt-36 lg:pr-20 lg:py-10 2xl:pr-40 2xl:mt-40">
              <h4 className="font-bold text-orange mb-2 uppercase text-xs tracking-widest">
                {/* Sneaker Company */}
                {`${product?.category?.name}/${product?.subcategory?.name}`}
              </h4>
              <h1 className="text-very-dark mb-4 font-bold text-3xl lg:text-4xl">
                {product?.name}
              </h1>
              <p className="text-dark-grayish mb-6 text-base sm:text-lg">
                {product?.description}
              </p>

              <div className="flex items-center justify-between mb-6 sm:flex-col sm:items-start">
                <div className="flex items-center gap-4">
                  <h3 className="text-very-dark font-bold text-3xl inline-block">
                    {`₹ ${product?.discountprice}`}
                  </h3>
                  {/* <span className="inline-block h-fit py-0.5 px-2 font-bold bg-pale-orange text-orange rounded-lg text-sm">
                    50%
                  </span> */}
                </div>
                <p className="origialprice">{`₹ ${product?.originalprice}`}</p>
              </div>
            </section>
          </main>
        </div>
      </div>